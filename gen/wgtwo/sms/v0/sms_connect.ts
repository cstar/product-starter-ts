// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-connect-es v0.13.2 with parameter "target=ts"
// @generated from file wgtwo/sms/v0/sms.proto (package wgtwo.sms.v0, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SendBinaryToSubscriberRequest, SendResponse, SendTextAsOperatorRequest, SendTextAsProductRequest, SendTextFromSubscriberRequest, SendTextToSubscriberRequest } from "./sms_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service wgtwo.sms.v0.SmsService
 */
export const SmsService = {
  typeName: "wgtwo.sms.v0.SmsService",
  methods: {
    /**
     * @generated from rpc wgtwo.sms.v0.SmsService.SendTextFromSubscriber
     */
    sendTextFromSubscriber: {
      name: "SendTextFromSubscriber",
      I: SendTextFromSubscriberRequest,
      O: SendResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc wgtwo.sms.v0.SmsService.SendBinaryToSubscriber
     */
    sendBinaryToSubscriber: {
      name: "SendBinaryToSubscriber",
      I: SendBinaryToSubscriberRequest,
      O: SendResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc wgtwo.sms.v0.SmsService.SendTextToSubscriber
     */
    sendTextToSubscriber: {
      name: "SendTextToSubscriber",
      I: SendTextToSubscriberRequest,
      O: SendResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc wgtwo.sms.v0.SmsService.SendTextToSubscriberAsOperator
     */
    sendTextToSubscriberAsOperator: {
      name: "SendTextToSubscriberAsOperator",
      I: SendTextAsOperatorRequest,
      O: SendResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc wgtwo.sms.v0.SmsService.SendTextToSubscriberAsProduct
     */
    sendTextToSubscriberAsProduct: {
      name: "SendTextToSubscriberAsProduct",
      I: SendTextAsProductRequest,
      O: SendResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

