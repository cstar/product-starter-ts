// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file wgtwo/callforward/v0/callforward.proto (package wgtwo.callforward.v0, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Empty, Message, proto3 } from "@bufbuild/protobuf";
import { PhoneNumber } from "../../common/v0/phonenumber_pb.js";

/**
 * @generated from message wgtwo.callforward.v0.DisableCallForwardingRequest
 */
export class DisableCallForwardingRequest extends Message<DisableCallForwardingRequest> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber subscriber = 1;
   */
  subscriber?: PhoneNumber;

  constructor(data?: PartialMessage<DisableCallForwardingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.DisableCallForwardingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscriber", kind: "message", T: PhoneNumber },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableCallForwardingRequest {
    return new DisableCallForwardingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableCallForwardingRequest {
    return new DisableCallForwardingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableCallForwardingRequest {
    return new DisableCallForwardingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DisableCallForwardingRequest | PlainMessage<DisableCallForwardingRequest> | undefined, b: DisableCallForwardingRequest | PlainMessage<DisableCallForwardingRequest> | undefined): boolean {
    return proto3.util.equals(DisableCallForwardingRequest, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.NumberCallForwardingRequest
 */
export class NumberCallForwardingRequest extends Message<NumberCallForwardingRequest> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber subscriber = 1;
   */
  subscriber?: PhoneNumber;

  /**
   * @generated from oneof wgtwo.callforward.v0.NumberCallForwardingRequest.type
   */
  type: {
    /**
     * @generated from field: wgtwo.callforward.v0.Unconditional unconditional = 2;
     */
    value: Unconditional;
    case: "unconditional";
  } | {
    /**
     * @generated from field: wgtwo.callforward.v0.Conditional conditional = 3;
     */
    value: Conditional;
    case: "conditional";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<NumberCallForwardingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.NumberCallForwardingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscriber", kind: "message", T: PhoneNumber },
    { no: 2, name: "unconditional", kind: "message", T: Unconditional, oneof: "type" },
    { no: 3, name: "conditional", kind: "message", T: Conditional, oneof: "type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NumberCallForwardingRequest {
    return new NumberCallForwardingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NumberCallForwardingRequest {
    return new NumberCallForwardingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NumberCallForwardingRequest {
    return new NumberCallForwardingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: NumberCallForwardingRequest | PlainMessage<NumberCallForwardingRequest> | undefined, b: NumberCallForwardingRequest | PlainMessage<NumberCallForwardingRequest> | undefined): boolean {
    return proto3.util.equals(NumberCallForwardingRequest, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.Unconditional
 */
export class Unconditional extends Message<Unconditional> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber forward_to_number = 1;
   */
  forwardToNumber?: PhoneNumber;

  constructor(data?: PartialMessage<Unconditional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.Unconditional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "forward_to_number", kind: "message", T: PhoneNumber },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Unconditional {
    return new Unconditional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Unconditional {
    return new Unconditional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Unconditional {
    return new Unconditional().fromJsonString(jsonString, options);
  }

  static equals(a: Unconditional | PlainMessage<Unconditional> | undefined, b: Unconditional | PlainMessage<Unconditional> | undefined): boolean {
    return proto3.util.equals(Unconditional, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.Conditional
 */
export class Conditional extends Message<Conditional> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber busy = 1;
   */
  busy?: PhoneNumber;

  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber no_reply = 2;
   */
  noReply?: PhoneNumber;

  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber unavailable = 3;
   */
  unavailable?: PhoneNumber;

  constructor(data?: PartialMessage<Conditional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.Conditional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "busy", kind: "message", T: PhoneNumber },
    { no: 2, name: "no_reply", kind: "message", T: PhoneNumber },
    { no: 3, name: "unavailable", kind: "message", T: PhoneNumber },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Conditional {
    return new Conditional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Conditional {
    return new Conditional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Conditional {
    return new Conditional().fromJsonString(jsonString, options);
  }

  static equals(a: Conditional | PlainMessage<Conditional> | undefined, b: Conditional | PlainMessage<Conditional> | undefined): boolean {
    return proto3.util.equals(Conditional, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.TrunkCallForwardingRequest
 */
export class TrunkCallForwardingRequest extends Message<TrunkCallForwardingRequest> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber subscriber = 1;
   */
  subscriber?: PhoneNumber;

  /**
   * @generated from oneof wgtwo.callforward.v0.TrunkCallForwardingRequest.type
   */
  type: {
    /**
     * @generated from field: wgtwo.callforward.v0.UnconditionalTrunkForwarding unconditional_trunk_forwarding = 2;
     */
    value: UnconditionalTrunkForwarding;
    case: "unconditionalTrunkForwarding";
  } | {
    /**
     * @generated from field: wgtwo.callforward.v0.ConditionalTrunkForwarding conditional_trunk_forwarding = 3;
     */
    value: ConditionalTrunkForwarding;
    case: "conditionalTrunkForwarding";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TrunkCallForwardingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.TrunkCallForwardingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscriber", kind: "message", T: PhoneNumber },
    { no: 2, name: "unconditional_trunk_forwarding", kind: "message", T: UnconditionalTrunkForwarding, oneof: "type" },
    { no: 3, name: "conditional_trunk_forwarding", kind: "message", T: ConditionalTrunkForwarding, oneof: "type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrunkCallForwardingRequest {
    return new TrunkCallForwardingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrunkCallForwardingRequest {
    return new TrunkCallForwardingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrunkCallForwardingRequest {
    return new TrunkCallForwardingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TrunkCallForwardingRequest | PlainMessage<TrunkCallForwardingRequest> | undefined, b: TrunkCallForwardingRequest | PlainMessage<TrunkCallForwardingRequest> | undefined): boolean {
    return proto3.util.equals(TrunkCallForwardingRequest, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.Trunk
 */
export class Trunk extends Message<Trunk> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<Trunk>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.Trunk";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Trunk {
    return new Trunk().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Trunk {
    return new Trunk().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Trunk {
    return new Trunk().fromJsonString(jsonString, options);
  }

  static equals(a: Trunk | PlainMessage<Trunk> | undefined, b: Trunk | PlainMessage<Trunk> | undefined): boolean {
    return proto3.util.equals(Trunk, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.UnconditionalTrunkForwarding
 */
export class UnconditionalTrunkForwarding extends Message<UnconditionalTrunkForwarding> {
  /**
   * @generated from field: wgtwo.callforward.v0.Trunk forward_to_trunk = 1;
   */
  forwardToTrunk?: Trunk;

  constructor(data?: PartialMessage<UnconditionalTrunkForwarding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.UnconditionalTrunkForwarding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "forward_to_trunk", kind: "message", T: Trunk },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnconditionalTrunkForwarding {
    return new UnconditionalTrunkForwarding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnconditionalTrunkForwarding {
    return new UnconditionalTrunkForwarding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnconditionalTrunkForwarding {
    return new UnconditionalTrunkForwarding().fromJsonString(jsonString, options);
  }

  static equals(a: UnconditionalTrunkForwarding | PlainMessage<UnconditionalTrunkForwarding> | undefined, b: UnconditionalTrunkForwarding | PlainMessage<UnconditionalTrunkForwarding> | undefined): boolean {
    return proto3.util.equals(UnconditionalTrunkForwarding, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.ConditionalTrunkForwarding
 */
export class ConditionalTrunkForwarding extends Message<ConditionalTrunkForwarding> {
  /**
   * @generated from field: wgtwo.callforward.v0.Trunk busy = 1;
   */
  busy?: Trunk;

  /**
   * @generated from field: wgtwo.callforward.v0.Trunk no_reply = 2;
   */
  noReply?: Trunk;

  /**
   * @generated from field: wgtwo.callforward.v0.Trunk unavailable = 3;
   */
  unavailable?: Trunk;

  constructor(data?: PartialMessage<ConditionalTrunkForwarding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.ConditionalTrunkForwarding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "busy", kind: "message", T: Trunk },
    { no: 2, name: "no_reply", kind: "message", T: Trunk },
    { no: 3, name: "unavailable", kind: "message", T: Trunk },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionalTrunkForwarding {
    return new ConditionalTrunkForwarding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionalTrunkForwarding {
    return new ConditionalTrunkForwarding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionalTrunkForwarding {
    return new ConditionalTrunkForwarding().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionalTrunkForwarding | PlainMessage<ConditionalTrunkForwarding> | undefined, b: ConditionalTrunkForwarding | PlainMessage<ConditionalTrunkForwarding> | undefined): boolean {
    return proto3.util.equals(ConditionalTrunkForwarding, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.VoicemailCallForwardingRequest
 */
export class VoicemailCallForwardingRequest extends Message<VoicemailCallForwardingRequest> {
  /**
   * @generated from field: wgtwo.common.v0.PhoneNumber subscriber = 1;
   */
  subscriber?: PhoneNumber;

  /**
   * @generated from oneof wgtwo.callforward.v0.VoicemailCallForwardingRequest.target
   */
  target: {
    /**
     * @generated from field: google.protobuf.Empty default = 2;
     */
    value: Empty;
    case: "default";
  } | {
    /**
     * @generated from field: wgtwo.common.v0.PhoneNumber phone_number = 3;
     */
    value: PhoneNumber;
    case: "phoneNumber";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<VoicemailCallForwardingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.VoicemailCallForwardingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscriber", kind: "message", T: PhoneNumber },
    { no: 2, name: "default", kind: "message", T: Empty, oneof: "target" },
    { no: 3, name: "phone_number", kind: "message", T: PhoneNumber, oneof: "target" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoicemailCallForwardingRequest {
    return new VoicemailCallForwardingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoicemailCallForwardingRequest {
    return new VoicemailCallForwardingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoicemailCallForwardingRequest {
    return new VoicemailCallForwardingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VoicemailCallForwardingRequest | PlainMessage<VoicemailCallForwardingRequest> | undefined, b: VoicemailCallForwardingRequest | PlainMessage<VoicemailCallForwardingRequest> | undefined): boolean {
    return proto3.util.equals(VoicemailCallForwardingRequest, a, b);
  }
}

/**
 * @generated from message wgtwo.callforward.v0.CallForwardingResponse
 */
export class CallForwardingResponse extends Message<CallForwardingResponse> {
  /**
   * @generated from field: wgtwo.callforward.v0.CallForwardingResponse.Status status = 1;
   */
  status = CallForwardingResponse_Status.UNKNOWN;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage = "";

  constructor(data?: PartialMessage<CallForwardingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wgtwo.callforward.v0.CallForwardingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(CallForwardingResponse_Status) },
    { no: 2, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallForwardingResponse {
    return new CallForwardingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallForwardingResponse {
    return new CallForwardingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallForwardingResponse {
    return new CallForwardingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CallForwardingResponse | PlainMessage<CallForwardingResponse> | undefined, b: CallForwardingResponse | PlainMessage<CallForwardingResponse> | undefined): boolean {
    return proto3.util.equals(CallForwardingResponse, a, b);
  }
}

/**
 * @generated from enum wgtwo.callforward.v0.CallForwardingResponse.Status
 */
export enum CallForwardingResponse_Status {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: ACCEPTED = 1;
   */
  ACCEPTED = 1,

  /**
   * @generated from enum value: REJECTED = 2;
   */
  REJECTED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CallForwardingResponse_Status)
proto3.util.setEnumType(CallForwardingResponse_Status, "wgtwo.callforward.v0.CallForwardingResponse.Status", [
  { no: 0, name: "UNKNOWN" },
  { no: 1, name: "ACCEPTED" },
  { no: 2, name: "REJECTED" },
]);

